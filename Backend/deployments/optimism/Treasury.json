{
  "address": "0xf8d1f181e52B941309B5E3b9B36769B64335aE7d",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_asset",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "allowanceSpend",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0xc803a44885d58f2af8d7d1f4c51a852628dc0bcba6b25029d60d99d915957e5f",
  "receipt": {
    "to": null,
    "from": "0x1B150538E943F00127929f7eeB65754f7beB0B6d",
    "contractAddress": "0xf8d1f181e52B941309B5E3b9B36769B64335aE7d",
    "transactionIndex": 1,
    "gasUsed": "560798",
    "logsBloom": "0x
    "blockHash": "0x148d2ba410d5b42ffcb295f367e31ab100c098ad38aaf26250c19362f8f96c5e",
    "transactionHash": "0xc803a44885d58f2af8d7d1f4c51a852628dc0bcba6b25029d60d99d915957e5f",
    "logs": [
      {
        "transactionIndex": 1,
        "blockNumber": 7297293,
        "transactionHash": "0xc803a44885d58f2af8d7d1f4c51a852628dc0bcba6b25029d60d99d915957e5f",
        "address": "0xf8d1f181e52B941309B5E3b9B36769B64335aE7d",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x0000000000000000000000001b150538e943f00127929f7eeb65754f7beb0b6d"
        ],
        "data": "0x",
        "logIndex": 0,
        "blockHash": "0x148d2ba410d5b42ffcb295f367e31ab100c098ad38aaf26250c19362f8f96c5e"
      }
    ],
    "blockNumber": 7297293,
    "cumulativeGasUsed": "607687",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 1,
  "solcInputHash": "bd53b56f5b3ca4d01c5d31eca417cf9e",
  "metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_asset\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"allowanceSpend\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/Treasury.sol\":\"Treasury\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby disabling any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 amount) external returns (bool);\\n}\\n\",\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.4) (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    function _contextSuffixLength() internal view virtual returns (uint256) {\\n        return 0;\\n    }\\n}\\n\",\"keccak256\":\"0xa92e4fa126feb6907daa0513ddd816b2eb91f30a808de54f63c17d0e162c3439\",\"license\":\"MIT\"},\"src/Treasury.sol\":{\"content\":\"// SPDX-License-Identifier: SEE LICENSE IN LICENSE\\npragma solidity ^0.8.18;\\n\\nimport {Ownable} from \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\nimport {IERC20} from \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\n\\ncontract Treasury is Ownable {\\n\\n    constructor () {\\n    }\\n\\n    function withdraw() external {\\n        require(msg.sender == owner());\\n\\n        (bool ok, ) = owner().call{value: address(this).balance }(\\\"\\\");\\n        require(ok);\\n    }\\n\\n    function allowanceSpend(address _asset , uint256 _amount) external {\\n        require(msg.sender == owner(),\\\"only owner can call this function\\\");\\n\\n        IERC20(_asset).transfer(owner(),_amount);\\n    }\\n\\n    receive() external payable {}\\n}\",\"keccak256\":\"0x7dd916fbe39f48f88db4ba50cc9c143605cc27700b8ef17e963948c223308174\",\"license\":\"SEE LICENSE IN LICENSE\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b5061002d61002261003260201b60201c565b61003a60201b60201c565b6100fe565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6108b78061010d6000396000f3fe60806040526004361061004e5760003560e01c80631625c7e31461005a5780633ccfd60b14610083578063715018a61461009a5780638da5cb5b146100b1578063f2fde38b146100dc57610055565b3661005557005b600080fd5b34801561006657600080fd5b50610081600480360381019061007c9190610566565b610105565b005b34801561008f57600080fd5b50610098610204565b005b3480156100a657600080fd5b506100af6102c3565b005b3480156100bd57600080fd5b506100c66102d7565b6040516100d391906105b5565b60405180910390f35b3480156100e857600080fd5b5061010360048036038101906100fe91906105d0565b610300565b005b61010d6102d7565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461017a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161017190610680565b60405180910390fd5b8173ffffffffffffffffffffffffffffffffffffffff1663a9059cbb61019e6102d7565b836040518363ffffffff1660e01b81526004016101bc9291906106af565b6020604051808303816000875af11580156101db573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101ff9190610710565b505050565b61020c6102d7565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461024357600080fd5b600061024d6102d7565b73ffffffffffffffffffffffffffffffffffffffff16476040516102709061076e565b60006040518083038185875af1925050503d80600081146102ad576040519150601f19603f3d011682016040523d82523d6000602084013e6102b2565b606091505b50509050806102c057600080fd5b50565b6102cb610383565b6102d56000610401565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b610308610383565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610377576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161036e906107f5565b60405180910390fd5b61038081610401565b50565b61038b6104c5565b73ffffffffffffffffffffffffffffffffffffffff166103a96102d7565b73ffffffffffffffffffffffffffffffffffffffff16146103ff576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103f690610861565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600033905090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006104fd826104d2565b9050919050565b61050d816104f2565b811461051857600080fd5b50565b60008135905061052a81610504565b92915050565b6000819050919050565b61054381610530565b811461054e57600080fd5b50565b6000813590506105608161053a565b92915050565b6000806040838503121561057d5761057c6104cd565b5b600061058b8582860161051b565b925050602061059c85828601610551565b9150509250929050565b6105af816104f2565b82525050565b60006020820190506105ca60008301846105a6565b92915050565b6000602082840312156105e6576105e56104cd565b5b60006105f48482850161051b565b91505092915050565b600082825260208201905092915050565b7f6f6e6c79206f776e65722063616e2063616c6c20746869732066756e6374696f60008201527f6e00000000000000000000000000000000000000000000000000000000000000602082015250565b600061066a6021836105fd565b91506106758261060e565b604082019050919050565b600060208201905081810360008301526106998161065d565b9050919050565b6106a981610530565b82525050565b60006040820190506106c460008301856105a6565b6106d160208301846106a0565b9392505050565b60008115159050919050565b6106ed816106d8565b81146106f857600080fd5b50565b60008151905061070a816106e4565b92915050565b600060208284031215610726576107256104cd565b5b6000610734848285016106fb565b91505092915050565b600081905092915050565b50565b600061075860008361073d565b915061076382610748565b600082019050919050565b60006107798261074b565b9150819050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b60006107df6026836105fd565b91506107ea82610783565b604082019050919050565b6000602082019050818103600083015261080e816107d2565b9050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b600061084b6020836105fd565b915061085682610815565b602082019050919050565b6000602082019050818103600083015261087a8161083e565b905091905056fea26469706673582212203080c66fe3889afab8b41408fec7d796f0b477f55c81fa3caade07222a12c1fe64736f6c63430008140033",
  "deployedBytecode": "0x60806040526004361061004e5760003560e01c80631625c7e31461005a5780633ccfd60b14610083578063715018a61461009a5780638da5cb5b146100b1578063f2fde38b146100dc57610055565b3661005557005b600080fd5b34801561006657600080fd5b50610081600480360381019061007c9190610566565b610105565b005b34801561008f57600080fd5b50610098610204565b005b3480156100a657600080fd5b506100af6102c3565b005b3480156100bd57600080fd5b506100c66102d7565b6040516100d391906105b5565b60405180910390f35b3480156100e857600080fd5b5061010360048036038101906100fe91906105d0565b610300565b005b61010d6102d7565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461017a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161017190610680565b60405180910390fd5b8173ffffffffffffffffffffffffffffffffffffffff1663a9059cbb61019e6102d7565b836040518363ffffffff1660e01b81526004016101bc9291906106af565b6020604051808303816000875af11580156101db573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101ff9190610710565b505050565b61020c6102d7565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461024357600080fd5b600061024d6102d7565b73ffffffffffffffffffffffffffffffffffffffff16476040516102709061076e565b60006040518083038185875af1925050503d80600081146102ad576040519150601f19603f3d011682016040523d82523d6000602084013e6102b2565b606091505b50509050806102c057600080fd5b50565b6102cb610383565b6102d56000610401565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b610308610383565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610377576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161036e906107f5565b60405180910390fd5b61038081610401565b50565b61038b6104c5565b73ffffffffffffffffffffffffffffffffffffffff166103a96102d7565b73ffffffffffffffffffffffffffffffffffffffff16146103ff576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103f690610861565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600033905090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006104fd826104d2565b9050919050565b61050d816104f2565b811461051857600080fd5b50565b60008135905061052a81610504565b92915050565b6000819050919050565b61054381610530565b811461054e57600080fd5b50565b6000813590506105608161053a565b92915050565b6000806040838503121561057d5761057c6104cd565b5b600061058b8582860161051b565b925050602061059c85828601610551565b9150509250929050565b6105af816104f2565b82525050565b60006020820190506105ca60008301846105a6565b92915050565b6000602082840312156105e6576105e56104cd565b5b60006105f48482850161051b565b91505092915050565b600082825260208201905092915050565b7f6f6e6c79206f776e65722063616e2063616c6c20746869732066756e6374696f60008201527f6e00000000000000000000000000000000000000000000000000000000000000602082015250565b600061066a6021836105fd565b91506106758261060e565b604082019050919050565b600060208201905081810360008301526106998161065d565b9050919050565b6106a981610530565b82525050565b60006040820190506106c460008301856105a6565b6106d160208301846106a0565b9392505050565b60008115159050919050565b6106ed816106d8565b81146106f857600080fd5b50565b60008151905061070a816106e4565b92915050565b600060208284031215610726576107256104cd565b5b6000610734848285016106fb565b91505092915050565b600081905092915050565b50565b600061075860008361073d565b915061076382610748565b600082019050919050565b60006107798261074b565b9150819050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b60006107df6026836105fd565b91506107ea82610783565b604082019050919050565b6000602082019050818103600083015261080e816107d2565b9050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b600061084b6020836105fd565b915061085682610815565b602082019050919050565b6000602082019050818103600083015261087a8161083e565b905091905056fea26469706673582212203080c66fe3889afab8b41408fec7d796f0b477f55c81fa3caade07222a12c1fe64736f6c63430008140033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 7,
        "contract": "src/Treasury.sol:Treasury",
        "label": "_owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      }
    }
  }
}